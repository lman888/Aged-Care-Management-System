struct Item {
#include <vector>
#include <string>
using namespace std;


  std::string name;
  std::string room;
  int quantity;
};

class Inventory {
  std::vector<Item> items;

public:
  void addItem(const std::string& name, const std::string& room, int qty = 1) {
    // look through the inventory to see if there are any of the item there already
    for (Item& item : items) {
      // if the item is already there increase the quantity
      if (item.name == name) {
        item.quantity += qty;
        return; // do nothing else
      }
    }
    // add the item if it wasn't already there
    items.push_back({name, room, qty});
  }

  void removeItem(const std::string& name, int qty = 1) {
    // go through all of the items
    for (Item it = items.begin(); it != items.end(); ++it) {
      // if the item is found
      if (it->name == name) {
        // reducce the quantity
        it->quantity -= qty;
        // remove the item from the list if the quantity reaches zero
        if (it->quantity <= 0) items.erase(it);
        return;
      }
    }
  }

  void print() const {
    // print out each item in the list
    for (const Item& item : items) {
      std::cout << item.name << ": " << item.quantity << " (" << item.room << ")\n";
    }
  }
};

int main() {
  Inventory medicalEquipment;
  Inventory medicine;
  Inventory beds;

  medicalEquipment.addItem("Scalpel", "Operating Theatre", 5);
  medicalEquipment.addItem("Iron Lung", "Bedroom 1", 1);

  medicine.addItem("Morphine", "Pharmacy", 500);
  medicine.addItem("Cure for cancer", "Research Lab", 1);

  beds.addItem("Good bed", "Bedroom 1", 1);
  beds.addItem("Bad bed", "Bedroom 2", 10);

  std::cout << "Equipment: \n";
  medicalEquipment.print();

  std::cout << "Medicine: \n";
  medicine.print();

  std::cout << "Beds: \n";
  beds.print();

  return 0;
}